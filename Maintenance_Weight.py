#############################################################################
# Name: Elizabeth Rentschlar                                       
# Purpose:                                                         
# Created: 7/15/15                                                  
# Copyright: (c) City of Bryan                                             
# ArcGIS Version: 10.2.2                                             
# Python Version: 2.7                                               
#############################################################################
# ---------------------------------------------------------------------------
# ToDelete.py
# Created on: 2015-08-11 13:19:10.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo
from arcpy import env

# Import arcpy module
import arcpy
env.overwriteOutput = True

# Local variables:
SS_Lines = "SS Lines"
All_WO = "All_WO"
Streams = "Streams"
MAJOR_ROADS = "MAJOR ROADS"
BCAD_PARCELS = "BCAD PARCELS"
Sewer_2_shp = "G:\\GIS_PROJECTS\\WATER_SERVICES\\Tess\\Sewer\\Sewer_2.shp"
parcels_F_select_shp = "G:\\GIS_PROJECTS\\WATER_SERVICES\\Tess\\Sewer\\parcels_F_select.shp"
WO_STOP_1_shp = "G:\\GIS_PROJECTS\\WATER_SERVICES\\Tess\\Sewer\\WO_STOP_1.shp"
WO_SSO_1_shp = "G:\\GIS_PROJECTS\\WATER_SERVICES\\Tess\\Sewer\\WO_SSO_1.shp"

# Process: Copy Features
arcpy.CopyFeatures_management(SS_Lines, Sewer_2_shp, "", "0", "0", "0")

# Process: Add Field
arcpy.AddField_management(Sewer_2_shp, "To_Water", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field (2)
arcpy.AddField_management(Sewer_2_shp, "To_Road", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field (3)
arcpy.AddField_management(Sewer_2_shp, "To_Public", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Near
arcpy.Near_analysis(Sewer_2_shp, "Streams", "", "NO_LOCATION", "NO_ANGLE", "PLANAR")

# Process: Calculate Field
arcpy.CalculateField_management(Sewer_2_shp, "To_Water", "!NEAR_DIST!", "PYTHON", "")

# Process: Near (2)
arcpy.Near_analysis(Sewer_2_shp, "'MAJOR ROADS'", "", "NO_LOCATION", "NO_ANGLE", "PLANAR")

# Process: Calculate Field (2)
arcpy.CalculateField_management(Sewer_2_shp, "To_Road", "!NEAR_DIST!", "PYTHON", "")

# Process: Select
arcpy.Select_analysis(BCAD_PARCELS, parcels_F_select_shp, "state_cd = 'F1' OR state_cd = 'F2'")

# Process: Near (3)
arcpy.Near_analysis(Sewer_2_shp, "G:\\GIS_PROJECTS\\WATER_SERVICES\\Tess\\Sewer\\parcels_F_select.shp", "", "NO_LOCATION", "NO_ANGLE", "PLANAR")

# Process: Calculate Field (3)
arcpy.CalculateField_management(Sewer_2_shp, "To_Public", "!NEAR_DIST!", "PYTHON", "")

# Process: Delete Field
arcpy.DeleteField_management(Sewer_2_shp, "NEAR_FID;NEAR_DIST")

# Process: Add Field (4)
arcpy.AddField_management(Sewer_2_shp, "Con_Size", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field (5)
arcpy.AddField_management(Sewer_2_shp, "Con_Water", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field (6)
arcpy.AddField_management(Sewer_2_shp, "Con_Road", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field (7)
arcpy.AddField_management(Sewer_2_shp, "Con_Pub", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field (8)
arcpy.AddField_management(Sewer_2_shp, "Consequenc", "LONG", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Select (2)
arcpy.Select_analysis(All_WO, WO_STOP_1_shp, "\"CATCODE\" = 'STOP'")

# Process: Snap
arcpy.Snap_edit(WO_STOP_1_shp, "'SS Lines' EDGE '50 Feet';'SS Lines' EDGE '100 Feet';'SS Lines' EDGE '150 Feet';'SS Lines' EDGE '200 Feet';'SS Lines' EDGE '250 Feet';'SS Lines' EDGE '300 Feet';'SS Lines' EDGE '350 Feet';'SS Lines' EDGE '400 Feet'")

# Process: Select (3)
arcpy.Select_analysis(All_WO, WO_SSO_1_shp, "\"CATCODE\" = 'SSO'")

# Process: Snap (2)
arcpy.Snap_edit(WO_SSO_1_shp, "'SS Lines' EDGE '50 Feet';'SS Lines' EDGE '100 Feet';'SS Lines' EDGE '150 Feet';'SS Lines' EDGE '200 Feet';'SS Lines' EDGE '250 Feet';'SS Lines' EDGE '300 Feet';'SS Lines' EDGE '350 Feet';'SS Lines' EDGE '400 Feet'")

sewers = arcpy.UpdateCursor("G:\\GIS_PROJECTS\\WATER_SERVICES\\Tess\\Sewer\\Sewer_2.shp")
for s in sewers:
    if s.MAINSIZE > 14:
        s.Con_Size = 10
    elif s.MAINSIZE > 9 and s.MAINSIZE < 15:
        s.Con_Size = 7
    elif s.MAINSIZE > 6 and s.MAINSIZE < 10:
        s.Con_Size = 4
    elif s.MAINSIZE < 7:
        s.Con_Size = 1
    else:
        s.Con_Size = 0
		
    if s.To_Water <= 100:
        s.Con_Water = 10
    elif s.To_Water > 100 and s.To_Water <= 500:
        s.Con_Water = 7
    elif s.To_Water > 500 and s.To_Water <= 1000:
        s.Con_Water = 4
    elif s.To_Water > 1000:
        s.Con_Water = 1
    else:
        s.Con_Water = 0

# Need to come up with something different 		
    if s.To_Road <= 5:
        s.Con_Road = 10
    elif s.To_Road > 5 and s.To_Road <= 20:
        s.Con_Road = 7
    elif s.To_Road > 20 and s.To_Road <= 50:
        s.Con_Road = 4
    elif s.To_Road > 50 and s.To_Road <= 100:
        s.Con_Road = 1
    else:
        s.Con_Road = 0
		
# Need to come up with something different 		
    if s.To_Public <= 5:
        s.Con_Pub = 10
    elif s.To_Public > 5 and s.To_Public <= 20:
        s.Con_Pub = 7
    elif s.To_Public > 20 and s.To_Public <= 50:
        s.Con_Pub = 4
    elif s.To_Public > 50 and s.To_Public <= 100:
        s.Con_Pub = 1
    else:
        s.Con_Pub = 0		

# Weights can be changed, maybe make them variables else where? 
    s.Consequenc = (.3 * s.Con_Size) + (.4 * s.Con_Water) + (.1 * s.Con_Road) + (.2 * s.Con_Pub)
		
    sewers.updateRow(s)
